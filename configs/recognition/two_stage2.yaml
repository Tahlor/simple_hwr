### TESTING
TESTING: false # Load as little as possible for fast prototyping

# Load model
load_path: false # ./results/baseline/20190622_155031-lr_0.001_bs_16_warp_False_arch_basic_encoder/baseline_model.pt # or false
#load_path: /media/data/GitHub/simple_hwr/results/baseline/20190625_092305-lr_0.001_bs_16_warp_True_arch_basic_encoder/baseline_model.pt
test_only: false                             # Do not train

# General
experiment: two_stage
name_deprecated: REAL_BASELINE
output_folder: ./results
epochs_to_run: 150
save_freq: 1
use_visdom: true
debug: off

# results_dir:
# log_dir:

# Training data
training_jsons: [prepare_IAM_Lines/gts/lines/txt/training.json, prepare_online_data/online_augmentation.json]
training_root: ../simple_hwr/data
training_shuffle: true
training_warp: false
online_augmentation: false
writer_id_pickles: [prepare_IAM_Lines/writer_IDs.pickle, prepare_online_data/writer_IDs.pickle]

# Testing data
testing_jsons: [prepare_IAM_Lines/gts/lines/txt/test.json]
testing_root: ../simple_hwr/data
testing_shuffle: false
testing_warp: false
output_predictions: true                    # Output incorrect test predictions

#Network
style_encoder: False                         # "2Stage", "False", "basic_encoder", "fake_encoder" - RNN + MLP (author classifier) -> embedding
batch_size: 16                               # Batch figsize
input_height: 60                             # Input dimension of image (will be cropped by default?)
cnn_out_size: 1024                           # Output dimension of CNN
num_of_channels: 1                           # Number of channels in input image
rnn_dimension: 512                          # originally 512

# Recognizer parameters
recognizer_dropout: .5                       # Dropout in recognizer LSTM

# Writer Classifier - LSTM + MLP (with embedding layer)
writer_dropout: 0.4                          # Probability of being "dropped out" in writer LSTM+MLP
writer_rnn_dimension: 128                    # Dimension of LSTM state vector
writer_rnn_output_size: 256                  # LSTM output dimension for writer classifier
mlp_layers: [64,embedding,64]             # Layer dimensions for MLP writer classifier
embedding_size: 32                           # The figsize of the embedding layer in the MLP

# LR schedule
learning_rate: 1e-4          # LR
scheduler_step: 150           # Every X steps, multiply LR by gamma
scheduler_gamma: .9          # LR decay rate
